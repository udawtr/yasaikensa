#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.239
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebRole1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="restoredb2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 拡張メソッドの定義
    partial void OnCreated();
    partial void InsertInspector(Inspector instance);
    partial void UpdateInspector(Inspector instance);
    partial void DeleteInspector(Inspector instance);
    partial void Insertedicode(edicode instance);
    partial void Updateedicode(edicode instance);
    partial void Deleteedicode(edicode instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertPrefCode(PrefCode instance);
    partial void UpdatePrefCode(PrefCode instance);
    partial void DeletePrefCode(PrefCode instance);
    partial void InsertKEN_ALL(KEN_ALL instance);
    partial void UpdateKEN_ALL(KEN_ALL instance);
    partial void DeleteKEN_ALL(KEN_ALL instance);
    partial void InsertYasaiName(YasaiName instance);
    partial void UpdateYasaiName(YasaiName instance);
    partial void DeleteYasaiName(YasaiName instance);
    partial void InsertYasaiKensa(YasaiKensa instance);
    partial void UpdateYasaiKensa(YasaiKensa instance);
    partial void DeleteYasaiKensa(YasaiKensa instance);
    partial void InsertTemp_YasaiKensa(Temp_YasaiKensa instance);
    partial void UpdateTemp_YasaiKensa(Temp_YasaiKensa instance);
    partial void DeleteTemp_YasaiKensa(Temp_YasaiKensa instance);
    partial void InsertPlace(Place instance);
    partial void UpdatePlace(Place instance);
    partial void DeletePlace(Place instance);
    partial void InsertShippingRestriction(ShippingRestriction instance);
    partial void UpdateShippingRestriction(ShippingRestriction instance);
    partial void DeleteShippingRestriction(ShippingRestriction instance);
    partial void InsertShippingRestrictedProduct(ShippingRestrictedProduct instance);
    partial void UpdateShippingRestrictedProduct(ShippingRestrictedProduct instance);
    partial void DeleteShippingRestrictedProduct(ShippingRestrictedProduct instance);
    partial void InsertShippingRestrictedCity(ShippingRestrictedCity instance);
    partial void UpdateShippingRestrictedCity(ShippingRestrictedCity instance);
    partial void DeleteShippingRestrictedCity(ShippingRestrictedCity instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["YasaiKensaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Inspector> Inspector
		{
			get
			{
				return this.GetTable<Inspector>();
			}
		}
		
		public System.Data.Linq.Table<edicode> edicode
		{
			get
			{
				return this.GetTable<edicode>();
			}
		}
		
		public System.Data.Linq.Table<ZipCode> ZipCode
		{
			get
			{
				return this.GetTable<ZipCode>();
			}
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<PrefCode> PrefCode
		{
			get
			{
				return this.GetTable<PrefCode>();
			}
		}
		
		public System.Data.Linq.Table<KEN_ALL> KEN_ALL
		{
			get
			{
				return this.GetTable<KEN_ALL>();
			}
		}
		
		public System.Data.Linq.Table<YasaiName> YasaiName
		{
			get
			{
				return this.GetTable<YasaiName>();
			}
		}
		
		public System.Data.Linq.Table<YasaiKensa> YasaiKensa
		{
			get
			{
				return this.GetTable<YasaiKensa>();
			}
		}
		
		public System.Data.Linq.Table<Temp_YasaiKensa> Temp_YasaiKensa
		{
			get
			{
				return this.GetTable<Temp_YasaiKensa>();
			}
		}
		
		public System.Data.Linq.Table<Place> Place
		{
			get
			{
				return this.GetTable<Place>();
			}
		}
		
		public System.Data.Linq.Table<Map> Map
		{
			get
			{
				return this.GetTable<Map>();
			}
		}
		
		public System.Data.Linq.Table<ShippingRestriction> ShippingRestriction
		{
			get
			{
				return this.GetTable<ShippingRestriction>();
			}
		}
		
		public System.Data.Linq.Table<ShippingRestrictedProduct> ShippingRestrictedProduct
		{
			get
			{
				return this.GetTable<ShippingRestrictedProduct>();
			}
		}
		
		public System.Data.Linq.Table<ShippingRestrictedCity> ShippingRestrictedCity
		{
			get
			{
				return this.GetTable<ShippingRestrictedCity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inspector")]
	public partial class Inspector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _URL;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public Inspector()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.edicode")]
	public partial class edicode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _大分類コード;
		
		private string _大分類名;
		
		private string _中分類コード;
		
		private string _中分類名;
		
		private string _青果標準品名コード;
		
		private string _栽培区分;
		
		private string _品名表記漢字;
		
		private string _品名表記カナ;
		
		private string _ベジフルコード;
		
		private string _別称;
		
		private string _備考;
		
		private string _青果共通商品コード;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On大分類コードChanging(string value);
    partial void On大分類コードChanged();
    partial void On大分類名Changing(string value);
    partial void On大分類名Changed();
    partial void On中分類コードChanging(string value);
    partial void On中分類コードChanged();
    partial void On中分類名Changing(string value);
    partial void On中分類名Changed();
    partial void On青果標準品名コードChanging(string value);
    partial void On青果標準品名コードChanged();
    partial void On栽培区分Changing(string value);
    partial void On栽培区分Changed();
    partial void On品名表記漢字Changing(string value);
    partial void On品名表記漢字Changed();
    partial void On品名表記カナChanging(string value);
    partial void On品名表記カナChanged();
    partial void OnベジフルコードChanging(string value);
    partial void OnベジフルコードChanged();
    partial void On別称Changing(string value);
    partial void On別称Changed();
    partial void On備考Changing(string value);
    partial void On備考Changed();
    partial void On青果共通商品コードChanging(string value);
    partial void On青果共通商品コードChanged();
    #endregion
		
		public edicode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_大分類コード", DbType="VarChar(50)")]
		public string 大分類コード
		{
			get
			{
				return this._大分類コード;
			}
			set
			{
				if ((this._大分類コード != value))
				{
					this.On大分類コードChanging(value);
					this.SendPropertyChanging();
					this._大分類コード = value;
					this.SendPropertyChanged("大分類コード");
					this.On大分類コードChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_大分類名", DbType="NVarChar(50)")]
		public string 大分類名
		{
			get
			{
				return this._大分類名;
			}
			set
			{
				if ((this._大分類名 != value))
				{
					this.On大分類名Changing(value);
					this.SendPropertyChanging();
					this._大分類名 = value;
					this.SendPropertyChanged("大分類名");
					this.On大分類名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_中分類コード", DbType="VarChar(50)")]
		public string 中分類コード
		{
			get
			{
				return this._中分類コード;
			}
			set
			{
				if ((this._中分類コード != value))
				{
					this.On中分類コードChanging(value);
					this.SendPropertyChanging();
					this._中分類コード = value;
					this.SendPropertyChanged("中分類コード");
					this.On中分類コードChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_中分類名", DbType="NVarChar(50)")]
		public string 中分類名
		{
			get
			{
				return this._中分類名;
			}
			set
			{
				if ((this._中分類名 != value))
				{
					this.On中分類名Changing(value);
					this.SendPropertyChanging();
					this._中分類名 = value;
					this.SendPropertyChanged("中分類名");
					this.On中分類名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_青果標準品名コード", DbType="VarChar(50)")]
		public string 青果標準品名コード
		{
			get
			{
				return this._青果標準品名コード;
			}
			set
			{
				if ((this._青果標準品名コード != value))
				{
					this.On青果標準品名コードChanging(value);
					this.SendPropertyChanging();
					this._青果標準品名コード = value;
					this.SendPropertyChanged("青果標準品名コード");
					this.On青果標準品名コードChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_栽培区分", DbType="NVarChar(50)")]
		public string 栽培区分
		{
			get
			{
				return this._栽培区分;
			}
			set
			{
				if ((this._栽培区分 != value))
				{
					this.On栽培区分Changing(value);
					this.SendPropertyChanging();
					this._栽培区分 = value;
					this.SendPropertyChanged("栽培区分");
					this.On栽培区分Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名表記漢字", DbType="NVarChar(50)")]
		public string 品名表記漢字
		{
			get
			{
				return this._品名表記漢字;
			}
			set
			{
				if ((this._品名表記漢字 != value))
				{
					this.On品名表記漢字Changing(value);
					this.SendPropertyChanging();
					this._品名表記漢字 = value;
					this.SendPropertyChanged("品名表記漢字");
					this.On品名表記漢字Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名表記カナ", DbType="NVarChar(50)")]
		public string 品名表記カナ
		{
			get
			{
				return this._品名表記カナ;
			}
			set
			{
				if ((this._品名表記カナ != value))
				{
					this.On品名表記カナChanging(value);
					this.SendPropertyChanging();
					this._品名表記カナ = value;
					this.SendPropertyChanged("品名表記カナ");
					this.On品名表記カナChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ベジフルコード", DbType="VarChar(50)")]
		public string ベジフルコード
		{
			get
			{
				return this._ベジフルコード;
			}
			set
			{
				if ((this._ベジフルコード != value))
				{
					this.OnベジフルコードChanging(value);
					this.SendPropertyChanging();
					this._ベジフルコード = value;
					this.SendPropertyChanged("ベジフルコード");
					this.OnベジフルコードChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_別称", DbType="NVarChar(150)")]
		public string 別称
		{
			get
			{
				return this._別称;
			}
			set
			{
				if ((this._別称 != value))
				{
					this.On別称Changing(value);
					this.SendPropertyChanging();
					this._別称 = value;
					this.SendPropertyChanged("別称");
					this.On別称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_備考", DbType="NVarChar(150)")]
		public string 備考
		{
			get
			{
				return this._備考;
			}
			set
			{
				if ((this._備考 != value))
				{
					this.On備考Changing(value);
					this.SendPropertyChanging();
					this._備考 = value;
					this.SendPropertyChanged("備考");
					this.On備考Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_青果共通商品コード", DbType="VarChar(50)")]
		public string 青果共通商品コード
		{
			get
			{
				return this._青果共通商品コード;
			}
			set
			{
				if ((this._青果共通商品コード != value))
				{
					this.On青果共通商品コードChanging(value);
					this.SendPropertyChanging();
					this._青果共通商品コード = value;
					this.SendPropertyChanged("青果共通商品コード");
					this.On青果共通商品コードChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZipCode")]
	public partial class ZipCode
	{
		
		private System.Nullable<int> _全国地方公共団体コードID;
		
		private string _旧郵便番号;
		
		private string _郵便番号;
		
		private string _都道府県名かな;
		
		private string _市区町村名かな;
		
		private string _町域名かな;
		
		private string _都道府県名;
		
		private string _市区町村名;
		
		private string _町域名;
		
		private System.Nullable<char> _一町域が二以上の郵便番号で表される場合の表示;
		
		private System.Nullable<char> _小字毎に番地が起番されている町域の表示;
		
		private System.Nullable<char> _丁目を有する町域の場合の表示;
		
		private System.Nullable<char> _一つの郵便番号で二以上の町域を表す場合の表示;
		
		private System.Nullable<char> _更新の表示;
		
		private System.Nullable<char> _変更理由;
		
		public ZipCode()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_全国地方公共団体コードID", DbType="Int")]
		public System.Nullable<int> 全国地方公共団体コードID
		{
			get
			{
				return this._全国地方公共団体コードID;
			}
			set
			{
				if ((this._全国地方公共団体コードID != value))
				{
					this._全国地方公共団体コードID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_旧郵便番号", DbType="NVarChar(5)")]
		public string 旧郵便番号
		{
			get
			{
				return this._旧郵便番号;
			}
			set
			{
				if ((this._旧郵便番号 != value))
				{
					this._旧郵便番号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_郵便番号", DbType="NVarChar(7)")]
		public string 郵便番号
		{
			get
			{
				return this._郵便番号;
			}
			set
			{
				if ((this._郵便番号 != value))
				{
					this._郵便番号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_都道府県名かな", DbType="NVarChar(100)")]
		public string 都道府県名かな
		{
			get
			{
				return this._都道府県名かな;
			}
			set
			{
				if ((this._都道府県名かな != value))
				{
					this._都道府県名かな = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_市区町村名かな", DbType="NVarChar(100)")]
		public string 市区町村名かな
		{
			get
			{
				return this._市区町村名かな;
			}
			set
			{
				if ((this._市区町村名かな != value))
				{
					this._市区町村名かな = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_町域名かな", DbType="NVarChar(100)")]
		public string 町域名かな
		{
			get
			{
				return this._町域名かな;
			}
			set
			{
				if ((this._町域名かな != value))
				{
					this._町域名かな = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_都道府県名", DbType="NVarChar(100)")]
		public string 都道府県名
		{
			get
			{
				return this._都道府県名;
			}
			set
			{
				if ((this._都道府県名 != value))
				{
					this._都道府県名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_市区町村名", DbType="NVarChar(100)")]
		public string 市区町村名
		{
			get
			{
				return this._市区町村名;
			}
			set
			{
				if ((this._市区町村名 != value))
				{
					this._市区町村名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_町域名", DbType="NVarChar(100)")]
		public string 町域名
		{
			get
			{
				return this._町域名;
			}
			set
			{
				if ((this._町域名 != value))
				{
					this._町域名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_一町域が二以上の郵便番号で表される場合の表示", DbType="Char(1)")]
		public System.Nullable<char> 一町域が二以上の郵便番号で表される場合の表示
		{
			get
			{
				return this._一町域が二以上の郵便番号で表される場合の表示;
			}
			set
			{
				if ((this._一町域が二以上の郵便番号で表される場合の表示 != value))
				{
					this._一町域が二以上の郵便番号で表される場合の表示 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_小字毎に番地が起番されている町域の表示", DbType="Char(1)")]
		public System.Nullable<char> 小字毎に番地が起番されている町域の表示
		{
			get
			{
				return this._小字毎に番地が起番されている町域の表示;
			}
			set
			{
				if ((this._小字毎に番地が起番されている町域の表示 != value))
				{
					this._小字毎に番地が起番されている町域の表示 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_丁目を有する町域の場合の表示", DbType="Char(1)")]
		public System.Nullable<char> 丁目を有する町域の場合の表示
		{
			get
			{
				return this._丁目を有する町域の場合の表示;
			}
			set
			{
				if ((this._丁目を有する町域の場合の表示 != value))
				{
					this._丁目を有する町域の場合の表示 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_一つの郵便番号で二以上の町域を表す場合の表示", DbType="Char(1)")]
		public System.Nullable<char> 一つの郵便番号で二以上の町域を表す場合の表示
		{
			get
			{
				return this._一つの郵便番号で二以上の町域を表す場合の表示;
			}
			set
			{
				if ((this._一つの郵便番号で二以上の町域を表す場合の表示 != value))
				{
					this._一つの郵便番号で二以上の町域を表す場合の表示 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_更新の表示", DbType="Char(1)")]
		public System.Nullable<char> 更新の表示
		{
			get
			{
				return this._更新の表示;
			}
			set
			{
				if ((this._更新の表示 != value))
				{
					this._更新の表示 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_変更理由", DbType="Char(1)")]
		public System.Nullable<char> 変更理由
		{
			get
			{
				return this._変更理由;
			}
			set
			{
				if ((this._変更理由 != value))
				{
					this._変更理由 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _Name;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrefCode")]
	public partial class PrefCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _Name;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PrefCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KEN_ALL")]
	public partial class KEN_ALL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _自治体コード;
		
		private string _旧郵便番号;
		
		private string _郵便番号;
		
		private string _都道府県名カナ;
		
		private string _市区町村名かな;
		
		private string _町域名かな;
		
		private string _都道府県名;
		
		private string _市区町村名;
		
		private string _町域名;
		
		private System.Nullable<short> _一町域が二以上の郵便番号で表される場合の表示;
		
		private System.Nullable<short> _小字毎に番地が起番されている町域の表示;
		
		private System.Nullable<short> _丁目を有する町域の場合の表示;
		
		private System.Nullable<short> _一つの郵便番号で二以上の町域を表す場合の表示;
		
		private System.Nullable<short> _更新の表示;
		
		private System.Nullable<short> _変更理由;
		
		private int _ID;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On自治体コードChanging(string value);
    partial void On自治体コードChanged();
    partial void On旧郵便番号Changing(string value);
    partial void On旧郵便番号Changed();
    partial void On郵便番号Changing(string value);
    partial void On郵便番号Changed();
    partial void On都道府県名カナChanging(string value);
    partial void On都道府県名カナChanged();
    partial void On市区町村名かなChanging(string value);
    partial void On市区町村名かなChanged();
    partial void On町域名かなChanging(string value);
    partial void On町域名かなChanged();
    partial void On都道府県名Changing(string value);
    partial void On都道府県名Changed();
    partial void On市区町村名Changing(string value);
    partial void On市区町村名Changed();
    partial void On町域名Changing(string value);
    partial void On町域名Changed();
    partial void On一町域が二以上の郵便番号で表される場合の表示Changing(System.Nullable<short> value);
    partial void On一町域が二以上の郵便番号で表される場合の表示Changed();
    partial void On小字毎に番地が起番されている町域の表示Changing(System.Nullable<short> value);
    partial void On小字毎に番地が起番されている町域の表示Changed();
    partial void On丁目を有する町域の場合の表示Changing(System.Nullable<short> value);
    partial void On丁目を有する町域の場合の表示Changed();
    partial void On一つの郵便番号で二以上の町域を表す場合の表示Changing(System.Nullable<short> value);
    partial void On一つの郵便番号で二以上の町域を表す場合の表示Changed();
    partial void On更新の表示Changing(System.Nullable<short> value);
    partial void On更新の表示Changed();
    partial void On変更理由Changing(System.Nullable<short> value);
    partial void On変更理由Changed();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public KEN_ALL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_自治体コード", DbType="NVarChar(10)")]
		public string 自治体コード
		{
			get
			{
				return this._自治体コード;
			}
			set
			{
				if ((this._自治体コード != value))
				{
					this.On自治体コードChanging(value);
					this.SendPropertyChanging();
					this._自治体コード = value;
					this.SendPropertyChanged("自治体コード");
					this.On自治体コードChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_旧郵便番号", DbType="NVarChar(10)")]
		public string 旧郵便番号
		{
			get
			{
				return this._旧郵便番号;
			}
			set
			{
				if ((this._旧郵便番号 != value))
				{
					this.On旧郵便番号Changing(value);
					this.SendPropertyChanging();
					this._旧郵便番号 = value;
					this.SendPropertyChanged("旧郵便番号");
					this.On旧郵便番号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_郵便番号", DbType="NVarChar(10)")]
		public string 郵便番号
		{
			get
			{
				return this._郵便番号;
			}
			set
			{
				if ((this._郵便番号 != value))
				{
					this.On郵便番号Changing(value);
					this.SendPropertyChanging();
					this._郵便番号 = value;
					this.SendPropertyChanged("郵便番号");
					this.On郵便番号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_都道府県名カナ", DbType="NVarChar(100)")]
		public string 都道府県名カナ
		{
			get
			{
				return this._都道府県名カナ;
			}
			set
			{
				if ((this._都道府県名カナ != value))
				{
					this.On都道府県名カナChanging(value);
					this.SendPropertyChanging();
					this._都道府県名カナ = value;
					this.SendPropertyChanged("都道府県名カナ");
					this.On都道府県名カナChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_市区町村名かな", DbType="NVarChar(100)")]
		public string 市区町村名かな
		{
			get
			{
				return this._市区町村名かな;
			}
			set
			{
				if ((this._市区町村名かな != value))
				{
					this.On市区町村名かなChanging(value);
					this.SendPropertyChanging();
					this._市区町村名かな = value;
					this.SendPropertyChanged("市区町村名かな");
					this.On市区町村名かなChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_町域名かな", DbType="NVarChar(100)")]
		public string 町域名かな
		{
			get
			{
				return this._町域名かな;
			}
			set
			{
				if ((this._町域名かな != value))
				{
					this.On町域名かなChanging(value);
					this.SendPropertyChanging();
					this._町域名かな = value;
					this.SendPropertyChanged("町域名かな");
					this.On町域名かなChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_都道府県名", DbType="NVarChar(100)")]
		public string 都道府県名
		{
			get
			{
				return this._都道府県名;
			}
			set
			{
				if ((this._都道府県名 != value))
				{
					this.On都道府県名Changing(value);
					this.SendPropertyChanging();
					this._都道府県名 = value;
					this.SendPropertyChanged("都道府県名");
					this.On都道府県名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_市区町村名", DbType="NVarChar(100)")]
		public string 市区町村名
		{
			get
			{
				return this._市区町村名;
			}
			set
			{
				if ((this._市区町村名 != value))
				{
					this.On市区町村名Changing(value);
					this.SendPropertyChanging();
					this._市区町村名 = value;
					this.SendPropertyChanged("市区町村名");
					this.On市区町村名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_町域名", DbType="NVarChar(100)")]
		public string 町域名
		{
			get
			{
				return this._町域名;
			}
			set
			{
				if ((this._町域名 != value))
				{
					this.On町域名Changing(value);
					this.SendPropertyChanging();
					this._町域名 = value;
					this.SendPropertyChanged("町域名");
					this.On町域名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_一町域が二以上の郵便番号で表される場合の表示", DbType="SmallInt")]
		public System.Nullable<short> 一町域が二以上の郵便番号で表される場合の表示
		{
			get
			{
				return this._一町域が二以上の郵便番号で表される場合の表示;
			}
			set
			{
				if ((this._一町域が二以上の郵便番号で表される場合の表示 != value))
				{
					this.On一町域が二以上の郵便番号で表される場合の表示Changing(value);
					this.SendPropertyChanging();
					this._一町域が二以上の郵便番号で表される場合の表示 = value;
					this.SendPropertyChanged("一町域が二以上の郵便番号で表される場合の表示");
					this.On一町域が二以上の郵便番号で表される場合の表示Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_小字毎に番地が起番されている町域の表示", DbType="SmallInt")]
		public System.Nullable<short> 小字毎に番地が起番されている町域の表示
		{
			get
			{
				return this._小字毎に番地が起番されている町域の表示;
			}
			set
			{
				if ((this._小字毎に番地が起番されている町域の表示 != value))
				{
					this.On小字毎に番地が起番されている町域の表示Changing(value);
					this.SendPropertyChanging();
					this._小字毎に番地が起番されている町域の表示 = value;
					this.SendPropertyChanged("小字毎に番地が起番されている町域の表示");
					this.On小字毎に番地が起番されている町域の表示Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_丁目を有する町域の場合の表示", DbType="SmallInt")]
		public System.Nullable<short> 丁目を有する町域の場合の表示
		{
			get
			{
				return this._丁目を有する町域の場合の表示;
			}
			set
			{
				if ((this._丁目を有する町域の場合の表示 != value))
				{
					this.On丁目を有する町域の場合の表示Changing(value);
					this.SendPropertyChanging();
					this._丁目を有する町域の場合の表示 = value;
					this.SendPropertyChanged("丁目を有する町域の場合の表示");
					this.On丁目を有する町域の場合の表示Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_一つの郵便番号で二以上の町域を表す場合の表示", DbType="SmallInt")]
		public System.Nullable<short> 一つの郵便番号で二以上の町域を表す場合の表示
		{
			get
			{
				return this._一つの郵便番号で二以上の町域を表す場合の表示;
			}
			set
			{
				if ((this._一つの郵便番号で二以上の町域を表す場合の表示 != value))
				{
					this.On一つの郵便番号で二以上の町域を表す場合の表示Changing(value);
					this.SendPropertyChanging();
					this._一つの郵便番号で二以上の町域を表す場合の表示 = value;
					this.SendPropertyChanged("一つの郵便番号で二以上の町域を表す場合の表示");
					this.On一つの郵便番号で二以上の町域を表す場合の表示Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_更新の表示", DbType="SmallInt")]
		public System.Nullable<short> 更新の表示
		{
			get
			{
				return this._更新の表示;
			}
			set
			{
				if ((this._更新の表示 != value))
				{
					this.On更新の表示Changing(value);
					this.SendPropertyChanging();
					this._更新の表示 = value;
					this.SendPropertyChanged("更新の表示");
					this.On更新の表示Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_変更理由", DbType="SmallInt")]
		public System.Nullable<short> 変更理由
		{
			get
			{
				return this._変更理由;
			}
			set
			{
				if ((this._変更理由 != value))
				{
					this.On変更理由Changing(value);
					this.SendPropertyChanging();
					this._変更理由 = value;
					this.SendPropertyChanged("変更理由");
					this.On変更理由Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YasaiName")]
	public partial class YasaiName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _品目;
		
		private string _補正;
		
		private string _大分類名;
		
		private string _中分類名;
		
		private int _Id;
		
		private string _別名;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On品目Changing(string value);
    partial void On品目Changed();
    partial void On補正Changing(string value);
    partial void On補正Changed();
    partial void On大分類名Changing(string value);
    partial void On大分類名Changed();
    partial void On中分類名Changing(string value);
    partial void On中分類名Changed();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On別名Changing(string value);
    partial void On別名Changed();
    #endregion
		
		public YasaiName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品目", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 品目
		{
			get
			{
				return this._品目;
			}
			set
			{
				if ((this._品目 != value))
				{
					this.On品目Changing(value);
					this.SendPropertyChanging();
					this._品目 = value;
					this.SendPropertyChanged("品目");
					this.On品目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_補正", DbType="NVarChar(50)")]
		public string 補正
		{
			get
			{
				return this._補正;
			}
			set
			{
				if ((this._補正 != value))
				{
					this.On補正Changing(value);
					this.SendPropertyChanging();
					this._補正 = value;
					this.SendPropertyChanged("補正");
					this.On補正Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_大分類名", DbType="NVarChar(50)")]
		public string 大分類名
		{
			get
			{
				return this._大分類名;
			}
			set
			{
				if ((this._大分類名 != value))
				{
					this.On大分類名Changing(value);
					this.SendPropertyChanging();
					this._大分類名 = value;
					this.SendPropertyChanged("大分類名");
					this.On大分類名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_中分類名", DbType="NVarChar(50)")]
		public string 中分類名
		{
			get
			{
				return this._中分類名;
			}
			set
			{
				if ((this._中分類名 != value))
				{
					this.On中分類名Changing(value);
					this.SendPropertyChanging();
					this._中分類名 = value;
					this.SendPropertyChanged("中分類名");
					this.On中分類名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_別名", DbType="NVarChar(50)")]
		public string 別名
		{
			get
			{
				return this._別名;
			}
			set
			{
				if ((this._別名 != value))
				{
					this.On別名Changing(value);
					this.SendPropertyChanging();
					this._別名 = value;
					this.SendPropertyChanged("別名");
					this.On別名Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YasaiKensa")]
	public partial class YasaiKensa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _実施主体;
		
		private string _産地都道府県;
		
		private string _産地市町村;
		
		private string _農場採取流通品;
		
		private string _食品カテゴリ;
		
		private string _品目;
		
		private string _検査機関;
		
		private string _採取日;
		
		private string _結果判明日;
		
		private string _厚生省発表日;
		
		private string _結果ヨウ素131;
		
		private string _結果セシウム134;
		
		private string _結果セシウム137;
		
		private string _結果セシウム;
		
		private string _出展;
		
		private System.Nullable<System.DateTime> _登録日;
		
		private System.Nullable<System.DateTime> _更新日;
		
		private System.Nullable<System.DateTime> _採取日D;
		
		private System.Nullable<System.DateTime> _公表日D;
		
		private System.Nullable<System.DateTime> _判明日D;
		
		private System.Nullable<decimal> _ヨウ素131D;
		
		private System.Nullable<decimal> _セシウム134D;
		
		private System.Nullable<decimal> _セシウム137D;
		
		private System.Nullable<decimal> _セシウムD;
		
		private string _野菜分類;
		
		private string _野菜品名;
		
		private EntityRef<Place> _Place;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void On実施主体Changing(string value);
    partial void On実施主体Changed();
    partial void On産地都道府県Changing(string value);
    partial void On産地都道府県Changed();
    partial void On産地市町村Changing(string value);
    partial void On産地市町村Changed();
    partial void On農場採取流通品Changing(string value);
    partial void On農場採取流通品Changed();
    partial void On食品カテゴリChanging(string value);
    partial void On食品カテゴリChanged();
    partial void On品目Changing(string value);
    partial void On品目Changed();
    partial void On検査機関Changing(string value);
    partial void On検査機関Changed();
    partial void On採取日Changing(string value);
    partial void On採取日Changed();
    partial void On結果判明日Changing(string value);
    partial void On結果判明日Changed();
    partial void On厚生省発表日Changing(string value);
    partial void On厚生省発表日Changed();
    partial void On結果ヨウ素131Changing(string value);
    partial void On結果ヨウ素131Changed();
    partial void On結果セシウム134Changing(string value);
    partial void On結果セシウム134Changed();
    partial void On結果セシウム137Changing(string value);
    partial void On結果セシウム137Changed();
    partial void On結果セシウムChanging(string value);
    partial void On結果セシウムChanged();
    partial void On出展Changing(string value);
    partial void On出展Changed();
    partial void On登録日Changing(System.Nullable<System.DateTime> value);
    partial void On登録日Changed();
    partial void On更新日Changing(System.Nullable<System.DateTime> value);
    partial void On更新日Changed();
    partial void On採取日DChanging(System.Nullable<System.DateTime> value);
    partial void On採取日DChanged();
    partial void On公表日DChanging(System.Nullable<System.DateTime> value);
    partial void On公表日DChanged();
    partial void On判明日DChanging(System.Nullable<System.DateTime> value);
    partial void On判明日DChanged();
    partial void Onヨウ素131DChanging(System.Nullable<decimal> value);
    partial void Onヨウ素131DChanged();
    partial void Onセシウム134DChanging(System.Nullable<decimal> value);
    partial void Onセシウム134DChanged();
    partial void Onセシウム137DChanging(System.Nullable<decimal> value);
    partial void Onセシウム137DChanged();
    partial void OnセシウムDChanging(System.Nullable<decimal> value);
    partial void OnセシウムDChanged();
    partial void On野菜分類Changing(string value);
    partial void On野菜分類Changed();
    partial void On野菜品名Changing(string value);
    partial void On野菜品名Changed();
    #endregion
		
		public YasaiKensa()
		{
			this._Place = default(EntityRef<Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_実施主体", DbType="NVarChar(50)")]
		public string 実施主体
		{
			get
			{
				return this._実施主体;
			}
			set
			{
				if ((this._実施主体 != value))
				{
					this.On実施主体Changing(value);
					this.SendPropertyChanging();
					this._実施主体 = value;
					this.SendPropertyChanged("実施主体");
					this.On実施主体Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_産地都道府県", DbType="NVarChar(50)")]
		public string 産地都道府県
		{
			get
			{
				return this._産地都道府県;
			}
			set
			{
				if ((this._産地都道府県 != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On産地都道府県Changing(value);
					this.SendPropertyChanging();
					this._産地都道府県 = value;
					this.SendPropertyChanged("産地都道府県");
					this.On産地都道府県Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_産地市町村", DbType="NVarChar(100)")]
		public string 産地市町村
		{
			get
			{
				return this._産地市町村;
			}
			set
			{
				if ((this._産地市町村 != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On産地市町村Changing(value);
					this.SendPropertyChanging();
					this._産地市町村 = value;
					this.SendPropertyChanged("産地市町村");
					this.On産地市町村Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_農場採取流通品", DbType="NVarChar(50)")]
		public string 農場採取流通品
		{
			get
			{
				return this._農場採取流通品;
			}
			set
			{
				if ((this._農場採取流通品 != value))
				{
					this.On農場採取流通品Changing(value);
					this.SendPropertyChanging();
					this._農場採取流通品 = value;
					this.SendPropertyChanged("農場採取流通品");
					this.On農場採取流通品Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_食品カテゴリ", DbType="NVarChar(50)")]
		public string 食品カテゴリ
		{
			get
			{
				return this._食品カテゴリ;
			}
			set
			{
				if ((this._食品カテゴリ != value))
				{
					this.On食品カテゴリChanging(value);
					this.SendPropertyChanging();
					this._食品カテゴリ = value;
					this.SendPropertyChanged("食品カテゴリ");
					this.On食品カテゴリChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品目", DbType="NVarChar(100)")]
		public string 品目
		{
			get
			{
				return this._品目;
			}
			set
			{
				if ((this._品目 != value))
				{
					this.On品目Changing(value);
					this.SendPropertyChanging();
					this._品目 = value;
					this.SendPropertyChanged("品目");
					this.On品目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_検査機関", DbType="NVarChar(MAX)")]
		public string 検査機関
		{
			get
			{
				return this._検査機関;
			}
			set
			{
				if ((this._検査機関 != value))
				{
					this.On検査機関Changing(value);
					this.SendPropertyChanging();
					this._検査機関 = value;
					this.SendPropertyChanged("検査機関");
					this.On検査機関Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_採取日", DbType="NVarChar(50)")]
		public string 採取日
		{
			get
			{
				return this._採取日;
			}
			set
			{
				if ((this._採取日 != value))
				{
					this.On採取日Changing(value);
					this.SendPropertyChanging();
					this._採取日 = value;
					this.SendPropertyChanged("採取日");
					this.On採取日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果判明日", DbType="NVarChar(50)")]
		public string 結果判明日
		{
			get
			{
				return this._結果判明日;
			}
			set
			{
				if ((this._結果判明日 != value))
				{
					this.On結果判明日Changing(value);
					this.SendPropertyChanging();
					this._結果判明日 = value;
					this.SendPropertyChanged("結果判明日");
					this.On結果判明日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_厚生省発表日", DbType="NVarChar(50)")]
		public string 厚生省発表日
		{
			get
			{
				return this._厚生省発表日;
			}
			set
			{
				if ((this._厚生省発表日 != value))
				{
					this.On厚生省発表日Changing(value);
					this.SendPropertyChanging();
					this._厚生省発表日 = value;
					this.SendPropertyChanged("厚生省発表日");
					this.On厚生省発表日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果ヨウ素131", DbType="NVarChar(50)")]
		public string 結果ヨウ素131
		{
			get
			{
				return this._結果ヨウ素131;
			}
			set
			{
				if ((this._結果ヨウ素131 != value))
				{
					this.On結果ヨウ素131Changing(value);
					this.SendPropertyChanging();
					this._結果ヨウ素131 = value;
					this.SendPropertyChanged("結果ヨウ素131");
					this.On結果ヨウ素131Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果セシウム134", DbType="NVarChar(50)")]
		public string 結果セシウム134
		{
			get
			{
				return this._結果セシウム134;
			}
			set
			{
				if ((this._結果セシウム134 != value))
				{
					this.On結果セシウム134Changing(value);
					this.SendPropertyChanging();
					this._結果セシウム134 = value;
					this.SendPropertyChanged("結果セシウム134");
					this.On結果セシウム134Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果セシウム137", DbType="NVarChar(50)")]
		public string 結果セシウム137
		{
			get
			{
				return this._結果セシウム137;
			}
			set
			{
				if ((this._結果セシウム137 != value))
				{
					this.On結果セシウム137Changing(value);
					this.SendPropertyChanging();
					this._結果セシウム137 = value;
					this.SendPropertyChanged("結果セシウム137");
					this.On結果セシウム137Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果セシウム", DbType="NVarChar(50)")]
		public string 結果セシウム
		{
			get
			{
				return this._結果セシウム;
			}
			set
			{
				if ((this._結果セシウム != value))
				{
					this.On結果セシウムChanging(value);
					this.SendPropertyChanging();
					this._結果セシウム = value;
					this.SendPropertyChanged("結果セシウム");
					this.On結果セシウムChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_出展", DbType="NVarChar(50)")]
		public string 出展
		{
			get
			{
				return this._出展;
			}
			set
			{
				if ((this._出展 != value))
				{
					this.On出展Changing(value);
					this.SendPropertyChanging();
					this._出展 = value;
					this.SendPropertyChanged("出展");
					this.On出展Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_登録日", DbType="DateTime")]
		public System.Nullable<System.DateTime> 登録日
		{
			get
			{
				return this._登録日;
			}
			set
			{
				if ((this._登録日 != value))
				{
					this.On登録日Changing(value);
					this.SendPropertyChanging();
					this._登録日 = value;
					this.SendPropertyChanged("登録日");
					this.On登録日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_更新日", DbType="DateTime")]
		public System.Nullable<System.DateTime> 更新日
		{
			get
			{
				return this._更新日;
			}
			set
			{
				if ((this._更新日 != value))
				{
					this.On更新日Changing(value);
					this.SendPropertyChanging();
					this._更新日 = value;
					this.SendPropertyChanged("更新日");
					this.On更新日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_採取日D", DbType="Date")]
		public System.Nullable<System.DateTime> 採取日D
		{
			get
			{
				return this._採取日D;
			}
			set
			{
				if ((this._採取日D != value))
				{
					this.On採取日DChanging(value);
					this.SendPropertyChanging();
					this._採取日D = value;
					this.SendPropertyChanged("採取日D");
					this.On採取日DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_公表日D", DbType="Date")]
		public System.Nullable<System.DateTime> 公表日D
		{
			get
			{
				return this._公表日D;
			}
			set
			{
				if ((this._公表日D != value))
				{
					this.On公表日DChanging(value);
					this.SendPropertyChanging();
					this._公表日D = value;
					this.SendPropertyChanged("公表日D");
					this.On公表日DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_判明日D", DbType="Date")]
		public System.Nullable<System.DateTime> 判明日D
		{
			get
			{
				return this._判明日D;
			}
			set
			{
				if ((this._判明日D != value))
				{
					this.On判明日DChanging(value);
					this.SendPropertyChanging();
					this._判明日D = value;
					this.SendPropertyChanged("判明日D");
					this.On判明日DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ヨウ素131D", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ヨウ素131D
		{
			get
			{
				return this._ヨウ素131D;
			}
			set
			{
				if ((this._ヨウ素131D != value))
				{
					this.Onヨウ素131DChanging(value);
					this.SendPropertyChanging();
					this._ヨウ素131D = value;
					this.SendPropertyChanged("ヨウ素131D");
					this.Onヨウ素131DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_セシウム134D", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> セシウム134D
		{
			get
			{
				return this._セシウム134D;
			}
			set
			{
				if ((this._セシウム134D != value))
				{
					this.Onセシウム134DChanging(value);
					this.SendPropertyChanging();
					this._セシウム134D = value;
					this.SendPropertyChanged("セシウム134D");
					this.Onセシウム134DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_セシウム137D", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> セシウム137D
		{
			get
			{
				return this._セシウム137D;
			}
			set
			{
				if ((this._セシウム137D != value))
				{
					this.Onセシウム137DChanging(value);
					this.SendPropertyChanging();
					this._セシウム137D = value;
					this.SendPropertyChanged("セシウム137D");
					this.Onセシウム137DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_セシウムD", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> セシウムD
		{
			get
			{
				return this._セシウムD;
			}
			set
			{
				if ((this._セシウムD != value))
				{
					this.OnセシウムDChanging(value);
					this.SendPropertyChanging();
					this._セシウムD = value;
					this.SendPropertyChanged("セシウムD");
					this.OnセシウムDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_野菜分類", DbType="NVarChar(50)")]
		public string 野菜分類
		{
			get
			{
				return this._野菜分類;
			}
			set
			{
				if ((this._野菜分類 != value))
				{
					this.On野菜分類Changing(value);
					this.SendPropertyChanging();
					this._野菜分類 = value;
					this.SendPropertyChanged("野菜分類");
					this.On野菜分類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_野菜品名", DbType="NVarChar(50)")]
		public string 野菜品名
		{
			get
			{
				return this._野菜品名;
			}
			set
			{
				if ((this._野菜品名 != value))
				{
					this.On野菜品名Changing(value);
					this.SendPropertyChanging();
					this._野菜品名 = value;
					this.SendPropertyChanged("野菜品名");
					this.On野菜品名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_YasaiKensa", Storage="_Place", ThisKey="産地都道府県,産地市町村", OtherKey="県,市", IsForeignKey=true)]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.YasaiKensa.Remove(this);
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.YasaiKensa.Add(this);
						this._産地都道府県 = value.県;
						this._産地市町村 = value.市;
					}
					else
					{
						this._産地都道府県 = default(string);
						this._産地市町村 = default(string);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Temp_YasaiKensa")]
	public partial class Temp_YasaiKensa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _実施主体;
		
		private string _産地都道府県;
		
		private string _産地市町村;
		
		private string _農場採取流通品;
		
		private string _食品カテゴリ;
		
		private string _品目;
		
		private string _検査機関;
		
		private string _採取日;
		
		private string _結果判明日;
		
		private string _厚生省発表日;
		
		private string _結果ヨウ素131;
		
		private string _結果セシウム134;
		
		private string _結果セシウム137;
		
		private string _結果セシウム;
		
		private string _出展;
		
		private System.Nullable<System.DateTime> _登録日;
		
		private System.Nullable<System.DateTime> _更新日;
		
		private System.Nullable<System.DateTime> _採取日D;
		
		private System.Nullable<System.DateTime> _公表日D;
		
		private System.Nullable<System.DateTime> _判明日D;
		
		private System.Nullable<decimal> _ヨウ素131D;
		
		private System.Nullable<decimal> _セシウム134D;
		
		private System.Nullable<decimal> _セシウム137D;
		
		private System.Nullable<decimal> _セシウムD;
		
		private string _野菜分類;
		
		private string _野菜品名;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void On実施主体Changing(string value);
    partial void On実施主体Changed();
    partial void On産地都道府県Changing(string value);
    partial void On産地都道府県Changed();
    partial void On産地市町村Changing(string value);
    partial void On産地市町村Changed();
    partial void On農場採取流通品Changing(string value);
    partial void On農場採取流通品Changed();
    partial void On食品カテゴリChanging(string value);
    partial void On食品カテゴリChanged();
    partial void On品目Changing(string value);
    partial void On品目Changed();
    partial void On検査機関Changing(string value);
    partial void On検査機関Changed();
    partial void On採取日Changing(string value);
    partial void On採取日Changed();
    partial void On結果判明日Changing(string value);
    partial void On結果判明日Changed();
    partial void On厚生省発表日Changing(string value);
    partial void On厚生省発表日Changed();
    partial void On結果ヨウ素131Changing(string value);
    partial void On結果ヨウ素131Changed();
    partial void On結果セシウム134Changing(string value);
    partial void On結果セシウム134Changed();
    partial void On結果セシウム137Changing(string value);
    partial void On結果セシウム137Changed();
    partial void On結果セシウムChanging(string value);
    partial void On結果セシウムChanged();
    partial void On出展Changing(string value);
    partial void On出展Changed();
    partial void On登録日Changing(System.Nullable<System.DateTime> value);
    partial void On登録日Changed();
    partial void On更新日Changing(System.Nullable<System.DateTime> value);
    partial void On更新日Changed();
    partial void On採取日DChanging(System.Nullable<System.DateTime> value);
    partial void On採取日DChanged();
    partial void On公表日DChanging(System.Nullable<System.DateTime> value);
    partial void On公表日DChanged();
    partial void On判明日DChanging(System.Nullable<System.DateTime> value);
    partial void On判明日DChanged();
    partial void Onヨウ素131DChanging(System.Nullable<decimal> value);
    partial void Onヨウ素131DChanged();
    partial void Onセシウム134DChanging(System.Nullable<decimal> value);
    partial void Onセシウム134DChanged();
    partial void Onセシウム137DChanging(System.Nullable<decimal> value);
    partial void Onセシウム137DChanged();
    partial void OnセシウムDChanging(System.Nullable<decimal> value);
    partial void OnセシウムDChanged();
    partial void On野菜分類Changing(string value);
    partial void On野菜分類Changed();
    partial void On野菜品名Changing(string value);
    partial void On野菜品名Changed();
    #endregion
		
		public Temp_YasaiKensa()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_実施主体", DbType="NVarChar(50)")]
		public string 実施主体
		{
			get
			{
				return this._実施主体;
			}
			set
			{
				if ((this._実施主体 != value))
				{
					this.On実施主体Changing(value);
					this.SendPropertyChanging();
					this._実施主体 = value;
					this.SendPropertyChanged("実施主体");
					this.On実施主体Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_産地都道府県", DbType="NVarChar(50)")]
		public string 産地都道府県
		{
			get
			{
				return this._産地都道府県;
			}
			set
			{
				if ((this._産地都道府県 != value))
				{
					this.On産地都道府県Changing(value);
					this.SendPropertyChanging();
					this._産地都道府県 = value;
					this.SendPropertyChanged("産地都道府県");
					this.On産地都道府県Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_産地市町村", DbType="NVarChar(100)")]
		public string 産地市町村
		{
			get
			{
				return this._産地市町村;
			}
			set
			{
				if ((this._産地市町村 != value))
				{
					this.On産地市町村Changing(value);
					this.SendPropertyChanging();
					this._産地市町村 = value;
					this.SendPropertyChanged("産地市町村");
					this.On産地市町村Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_農場採取流通品", DbType="NVarChar(50)")]
		public string 農場採取流通品
		{
			get
			{
				return this._農場採取流通品;
			}
			set
			{
				if ((this._農場採取流通品 != value))
				{
					this.On農場採取流通品Changing(value);
					this.SendPropertyChanging();
					this._農場採取流通品 = value;
					this.SendPropertyChanged("農場採取流通品");
					this.On農場採取流通品Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_食品カテゴリ", DbType="NVarChar(50)")]
		public string 食品カテゴリ
		{
			get
			{
				return this._食品カテゴリ;
			}
			set
			{
				if ((this._食品カテゴリ != value))
				{
					this.On食品カテゴリChanging(value);
					this.SendPropertyChanging();
					this._食品カテゴリ = value;
					this.SendPropertyChanged("食品カテゴリ");
					this.On食品カテゴリChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品目", DbType="NVarChar(100)")]
		public string 品目
		{
			get
			{
				return this._品目;
			}
			set
			{
				if ((this._品目 != value))
				{
					this.On品目Changing(value);
					this.SendPropertyChanging();
					this._品目 = value;
					this.SendPropertyChanged("品目");
					this.On品目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_検査機関", DbType="NVarChar(MAX)")]
		public string 検査機関
		{
			get
			{
				return this._検査機関;
			}
			set
			{
				if ((this._検査機関 != value))
				{
					this.On検査機関Changing(value);
					this.SendPropertyChanging();
					this._検査機関 = value;
					this.SendPropertyChanged("検査機関");
					this.On検査機関Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_採取日", DbType="NVarChar(50)")]
		public string 採取日
		{
			get
			{
				return this._採取日;
			}
			set
			{
				if ((this._採取日 != value))
				{
					this.On採取日Changing(value);
					this.SendPropertyChanging();
					this._採取日 = value;
					this.SendPropertyChanged("採取日");
					this.On採取日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果判明日", DbType="NVarChar(50)")]
		public string 結果判明日
		{
			get
			{
				return this._結果判明日;
			}
			set
			{
				if ((this._結果判明日 != value))
				{
					this.On結果判明日Changing(value);
					this.SendPropertyChanging();
					this._結果判明日 = value;
					this.SendPropertyChanged("結果判明日");
					this.On結果判明日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_厚生省発表日", DbType="NVarChar(50)")]
		public string 厚生省発表日
		{
			get
			{
				return this._厚生省発表日;
			}
			set
			{
				if ((this._厚生省発表日 != value))
				{
					this.On厚生省発表日Changing(value);
					this.SendPropertyChanging();
					this._厚生省発表日 = value;
					this.SendPropertyChanged("厚生省発表日");
					this.On厚生省発表日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果ヨウ素131", DbType="NVarChar(50)")]
		public string 結果ヨウ素131
		{
			get
			{
				return this._結果ヨウ素131;
			}
			set
			{
				if ((this._結果ヨウ素131 != value))
				{
					this.On結果ヨウ素131Changing(value);
					this.SendPropertyChanging();
					this._結果ヨウ素131 = value;
					this.SendPropertyChanged("結果ヨウ素131");
					this.On結果ヨウ素131Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果セシウム134", DbType="NVarChar(50)")]
		public string 結果セシウム134
		{
			get
			{
				return this._結果セシウム134;
			}
			set
			{
				if ((this._結果セシウム134 != value))
				{
					this.On結果セシウム134Changing(value);
					this.SendPropertyChanging();
					this._結果セシウム134 = value;
					this.SendPropertyChanged("結果セシウム134");
					this.On結果セシウム134Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果セシウム137", DbType="NVarChar(50)")]
		public string 結果セシウム137
		{
			get
			{
				return this._結果セシウム137;
			}
			set
			{
				if ((this._結果セシウム137 != value))
				{
					this.On結果セシウム137Changing(value);
					this.SendPropertyChanging();
					this._結果セシウム137 = value;
					this.SendPropertyChanged("結果セシウム137");
					this.On結果セシウム137Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_結果セシウム", DbType="NVarChar(50)")]
		public string 結果セシウム
		{
			get
			{
				return this._結果セシウム;
			}
			set
			{
				if ((this._結果セシウム != value))
				{
					this.On結果セシウムChanging(value);
					this.SendPropertyChanging();
					this._結果セシウム = value;
					this.SendPropertyChanged("結果セシウム");
					this.On結果セシウムChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_出展", DbType="NVarChar(50)")]
		public string 出展
		{
			get
			{
				return this._出展;
			}
			set
			{
				if ((this._出展 != value))
				{
					this.On出展Changing(value);
					this.SendPropertyChanging();
					this._出展 = value;
					this.SendPropertyChanged("出展");
					this.On出展Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_登録日", DbType="DateTime")]
		public System.Nullable<System.DateTime> 登録日
		{
			get
			{
				return this._登録日;
			}
			set
			{
				if ((this._登録日 != value))
				{
					this.On登録日Changing(value);
					this.SendPropertyChanging();
					this._登録日 = value;
					this.SendPropertyChanged("登録日");
					this.On登録日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_更新日", DbType="DateTime")]
		public System.Nullable<System.DateTime> 更新日
		{
			get
			{
				return this._更新日;
			}
			set
			{
				if ((this._更新日 != value))
				{
					this.On更新日Changing(value);
					this.SendPropertyChanging();
					this._更新日 = value;
					this.SendPropertyChanged("更新日");
					this.On更新日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_採取日D", DbType="Date")]
		public System.Nullable<System.DateTime> 採取日D
		{
			get
			{
				return this._採取日D;
			}
			set
			{
				if ((this._採取日D != value))
				{
					this.On採取日DChanging(value);
					this.SendPropertyChanging();
					this._採取日D = value;
					this.SendPropertyChanged("採取日D");
					this.On採取日DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_公表日D", DbType="Date")]
		public System.Nullable<System.DateTime> 公表日D
		{
			get
			{
				return this._公表日D;
			}
			set
			{
				if ((this._公表日D != value))
				{
					this.On公表日DChanging(value);
					this.SendPropertyChanging();
					this._公表日D = value;
					this.SendPropertyChanged("公表日D");
					this.On公表日DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_判明日D", DbType="Date")]
		public System.Nullable<System.DateTime> 判明日D
		{
			get
			{
				return this._判明日D;
			}
			set
			{
				if ((this._判明日D != value))
				{
					this.On判明日DChanging(value);
					this.SendPropertyChanging();
					this._判明日D = value;
					this.SendPropertyChanged("判明日D");
					this.On判明日DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ヨウ素131D", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ヨウ素131D
		{
			get
			{
				return this._ヨウ素131D;
			}
			set
			{
				if ((this._ヨウ素131D != value))
				{
					this.Onヨウ素131DChanging(value);
					this.SendPropertyChanging();
					this._ヨウ素131D = value;
					this.SendPropertyChanged("ヨウ素131D");
					this.Onヨウ素131DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_セシウム134D", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> セシウム134D
		{
			get
			{
				return this._セシウム134D;
			}
			set
			{
				if ((this._セシウム134D != value))
				{
					this.Onセシウム134DChanging(value);
					this.SendPropertyChanging();
					this._セシウム134D = value;
					this.SendPropertyChanged("セシウム134D");
					this.Onセシウム134DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_セシウム137D", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> セシウム137D
		{
			get
			{
				return this._セシウム137D;
			}
			set
			{
				if ((this._セシウム137D != value))
				{
					this.Onセシウム137DChanging(value);
					this.SendPropertyChanging();
					this._セシウム137D = value;
					this.SendPropertyChanged("セシウム137D");
					this.Onセシウム137DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_セシウムD", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> セシウムD
		{
			get
			{
				return this._セシウムD;
			}
			set
			{
				if ((this._セシウムD != value))
				{
					this.OnセシウムDChanging(value);
					this.SendPropertyChanging();
					this._セシウムD = value;
					this.SendPropertyChanged("セシウムD");
					this.OnセシウムDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_野菜分類", DbType="NVarChar(50)")]
		public string 野菜分類
		{
			get
			{
				return this._野菜分類;
			}
			set
			{
				if ((this._野菜分類 != value))
				{
					this.On野菜分類Changing(value);
					this.SendPropertyChanging();
					this._野菜分類 = value;
					this.SendPropertyChanged("野菜分類");
					this.On野菜分類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_野菜品名", DbType="NVarChar(50)")]
		public string 野菜品名
		{
			get
			{
				return this._野菜品名;
			}
			set
			{
				if ((this._野菜品名 != value))
				{
					this.On野菜品名Changing(value);
					this.SendPropertyChanging();
					this._野菜品名 = value;
					this.SendPropertyChanged("野菜品名");
					this.On野菜品名Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Place")]
	public partial class Place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _県;
		
		private string _市;
		
		private System.Nullable<float> _緯度;
		
		private System.Nullable<float> _経度;
		
		private System.Nullable<float> _距離;
		
		private System.Nullable<float> _方位;
		
		private EntitySet<YasaiKensa> _YasaiKensa;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On県Changing(string value);
    partial void On県Changed();
    partial void On市Changing(string value);
    partial void On市Changed();
    partial void On緯度Changing(System.Nullable<float> value);
    partial void On緯度Changed();
    partial void On経度Changing(System.Nullable<float> value);
    partial void On経度Changed();
    partial void On距離Changing(System.Nullable<float> value);
    partial void On距離Changed();
    partial void On方位Changing(System.Nullable<float> value);
    partial void On方位Changed();
    #endregion
		
		public Place()
		{
			this._YasaiKensa = new EntitySet<YasaiKensa>(new Action<YasaiKensa>(this.attach_YasaiKensa), new Action<YasaiKensa>(this.detach_YasaiKensa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_県", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 県
		{
			get
			{
				return this._県;
			}
			set
			{
				if ((this._県 != value))
				{
					this.On県Changing(value);
					this.SendPropertyChanging();
					this._県 = value;
					this.SendPropertyChanged("県");
					this.On県Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_市", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 市
		{
			get
			{
				return this._市;
			}
			set
			{
				if ((this._市 != value))
				{
					this.On市Changing(value);
					this.SendPropertyChanging();
					this._市 = value;
					this.SendPropertyChanged("市");
					this.On市Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_緯度", DbType="Real")]
		public System.Nullable<float> 緯度
		{
			get
			{
				return this._緯度;
			}
			set
			{
				if ((this._緯度 != value))
				{
					this.On緯度Changing(value);
					this.SendPropertyChanging();
					this._緯度 = value;
					this.SendPropertyChanged("緯度");
					this.On緯度Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_経度", DbType="Real")]
		public System.Nullable<float> 経度
		{
			get
			{
				return this._経度;
			}
			set
			{
				if ((this._経度 != value))
				{
					this.On経度Changing(value);
					this.SendPropertyChanging();
					this._経度 = value;
					this.SendPropertyChanged("経度");
					this.On経度Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_距離", DbType="Real")]
		public System.Nullable<float> 距離
		{
			get
			{
				return this._距離;
			}
			set
			{
				if ((this._距離 != value))
				{
					this.On距離Changing(value);
					this.SendPropertyChanging();
					this._距離 = value;
					this.SendPropertyChanged("距離");
					this.On距離Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_方位", DbType="Real")]
		public System.Nullable<float> 方位
		{
			get
			{
				return this._方位;
			}
			set
			{
				if ((this._方位 != value))
				{
					this.On方位Changing(value);
					this.SendPropertyChanging();
					this._方位 = value;
					this.SendPropertyChanged("方位");
					this.On方位Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_YasaiKensa", Storage="_YasaiKensa", ThisKey="県,市", OtherKey="産地都道府県,産地市町村")]
		public EntitySet<YasaiKensa> YasaiKensa
		{
			get
			{
				return this._YasaiKensa;
			}
			set
			{
				this._YasaiKensa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YasaiKensa(YasaiKensa entity)
		{
			this.SendPropertyChanging();
			entity.Place = this;
		}
		
		private void detach_YasaiKensa(YasaiKensa entity)
		{
			this.SendPropertyChanging();
			entity.Place = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Map")]
	public partial class Map
	{
		
		private string _産地都道府県;
		
		private string _産地市町村;
		
		private System.Nullable<int> _データ数;
		
		private System.Nullable<float> _経度;
		
		private System.Nullable<float> _緯度;
		
		private System.Nullable<float> _距離;
		
		private System.Nullable<float> _方位;
		
		private System.Nullable<decimal> _I131;
		
		private System.Nullable<decimal> _Cs;
		
		public Map()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_産地都道府県", DbType="NVarChar(50)")]
		public string 産地都道府県
		{
			get
			{
				return this._産地都道府県;
			}
			set
			{
				if ((this._産地都道府県 != value))
				{
					this._産地都道府県 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_産地市町村", DbType="NVarChar(100)")]
		public string 産地市町村
		{
			get
			{
				return this._産地市町村;
			}
			set
			{
				if ((this._産地市町村 != value))
				{
					this._産地市町村 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_データ数", DbType="Int")]
		public System.Nullable<int> データ数
		{
			get
			{
				return this._データ数;
			}
			set
			{
				if ((this._データ数 != value))
				{
					this._データ数 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_経度", DbType="Real")]
		public System.Nullable<float> 経度
		{
			get
			{
				return this._経度;
			}
			set
			{
				if ((this._経度 != value))
				{
					this._経度 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_緯度", DbType="Real")]
		public System.Nullable<float> 緯度
		{
			get
			{
				return this._緯度;
			}
			set
			{
				if ((this._緯度 != value))
				{
					this._緯度 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_距離", DbType="Real")]
		public System.Nullable<float> 距離
		{
			get
			{
				return this._距離;
			}
			set
			{
				if ((this._距離 != value))
				{
					this._距離 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_方位", DbType="Real")]
		public System.Nullable<float> 方位
		{
			get
			{
				return this._方位;
			}
			set
			{
				if ((this._方位 != value))
				{
					this._方位 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I131", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> I131
		{
			get
			{
				return this._I131;
			}
			set
			{
				if ((this._I131 != value))
				{
					this._I131 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cs", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Cs
		{
			get
			{
				return this._Cs;
			}
			set
			{
				if ((this._Cs != value))
				{
					this._Cs = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingRestriction")]
	public partial class ShippingRestriction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _PrefName;
		
		private int _CityFilterMode;
		
		private int _ProductFilterMode;
		
		private System.Nullable<System.DateTime> _BeginDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Caption;
		
		private string _Comment;
		
		private EntityRef<ShippingRestrictedCity> _ShippingRestrictedCity;
		
		private EntityRef<ShippingRestrictedProduct> _ShippingRestrictedProduct;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPrefNameChanging(string value);
    partial void OnPrefNameChanged();
    partial void OnCityFilterModeChanging(int value);
    partial void OnCityFilterModeChanged();
    partial void OnProductFilterModeChanging(int value);
    partial void OnProductFilterModeChanged();
    partial void OnBeginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ShippingRestriction()
		{
			this._ShippingRestrictedCity = default(EntityRef<ShippingRestrictedCity>);
			this._ShippingRestrictedProduct = default(EntityRef<ShippingRestrictedProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					if ((this._ShippingRestrictedCity.HasLoadedOrAssignedValue || this._ShippingRestrictedProduct.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PrefName
		{
			get
			{
				return this._PrefName;
			}
			set
			{
				if ((this._PrefName != value))
				{
					this.OnPrefNameChanging(value);
					this.SendPropertyChanging();
					this._PrefName = value;
					this.SendPropertyChanged("PrefName");
					this.OnPrefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityFilterMode", DbType="Int NOT NULL")]
		public int CityFilterMode
		{
			get
			{
				return this._CityFilterMode;
			}
			set
			{
				if ((this._CityFilterMode != value))
				{
					this.OnCityFilterModeChanging(value);
					this.SendPropertyChanging();
					this._CityFilterMode = value;
					this.SendPropertyChanged("CityFilterMode");
					this.OnCityFilterModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductFilterMode", DbType="Int NOT NULL")]
		public int ProductFilterMode
		{
			get
			{
				return this._ProductFilterMode;
			}
			set
			{
				if ((this._ProductFilterMode != value))
				{
					this.OnProductFilterModeChanging(value);
					this.SendPropertyChanging();
					this._ProductFilterMode = value;
					this.SendPropertyChanged("ProductFilterMode");
					this.OnProductFilterModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginDate", DbType="Date")]
		public System.Nullable<System.DateTime> BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(100)")]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingRestrictedCity_ShippingRestriction", Storage="_ShippingRestrictedCity", ThisKey="Code", OtherKey="ShippingRestrictionCode", IsForeignKey=true)]
		public ShippingRestrictedCity ShippingRestrictedCity
		{
			get
			{
				return this._ShippingRestrictedCity.Entity;
			}
			set
			{
				ShippingRestrictedCity previousValue = this._ShippingRestrictedCity.Entity;
				if (((previousValue != value) 
							|| (this._ShippingRestrictedCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingRestrictedCity.Entity = null;
						previousValue.ShippingRestriction.Remove(this);
					}
					this._ShippingRestrictedCity.Entity = value;
					if ((value != null))
					{
						value.ShippingRestriction.Add(this);
						this._Code = value.ShippingRestrictionCode;
					}
					else
					{
						this._Code = default(string);
					}
					this.SendPropertyChanged("ShippingRestrictedCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingRestrictedProduct_ShippingRestriction", Storage="_ShippingRestrictedProduct", ThisKey="Code", OtherKey="ShippingRestrictionCode", IsForeignKey=true)]
		public ShippingRestrictedProduct ShippingRestrictedProduct
		{
			get
			{
				return this._ShippingRestrictedProduct.Entity;
			}
			set
			{
				ShippingRestrictedProduct previousValue = this._ShippingRestrictedProduct.Entity;
				if (((previousValue != value) 
							|| (this._ShippingRestrictedProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingRestrictedProduct.Entity = null;
						previousValue.ShippingRestriction.Remove(this);
					}
					this._ShippingRestrictedProduct.Entity = value;
					if ((value != null))
					{
						value.ShippingRestriction.Add(this);
						this._Code = value.ShippingRestrictionCode;
					}
					else
					{
						this._Code = default(string);
					}
					this.SendPropertyChanged("ShippingRestrictedProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingRestrictedProduct")]
	public partial class ShippingRestrictedProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ShippingRestrictionCode;
		
		private string _ProductName;
		
		private EntitySet<ShippingRestriction> _ShippingRestriction;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShippingRestrictionCodeChanging(string value);
    partial void OnShippingRestrictionCodeChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    #endregion
		
		public ShippingRestrictedProduct()
		{
			this._ShippingRestriction = new EntitySet<ShippingRestriction>(new Action<ShippingRestriction>(this.attach_ShippingRestriction), new Action<ShippingRestriction>(this.detach_ShippingRestriction));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingRestrictionCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShippingRestrictionCode
		{
			get
			{
				return this._ShippingRestrictionCode;
			}
			set
			{
				if ((this._ShippingRestrictionCode != value))
				{
					this.OnShippingRestrictionCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingRestrictionCode = value;
					this.SendPropertyChanged("ShippingRestrictionCode");
					this.OnShippingRestrictionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingRestrictedProduct_ShippingRestriction", Storage="_ShippingRestriction", ThisKey="ShippingRestrictionCode", OtherKey="Code")]
		public EntitySet<ShippingRestriction> ShippingRestriction
		{
			get
			{
				return this._ShippingRestriction;
			}
			set
			{
				this._ShippingRestriction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShippingRestriction(ShippingRestriction entity)
		{
			this.SendPropertyChanging();
			entity.ShippingRestrictedProduct = this;
		}
		
		private void detach_ShippingRestriction(ShippingRestriction entity)
		{
			this.SendPropertyChanging();
			entity.ShippingRestrictedProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingRestrictedCity")]
	public partial class ShippingRestrictedCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ShippingRestrictionCode;
		
		private string _CityName;
		
		private EntitySet<ShippingRestriction> _ShippingRestriction;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShippingRestrictionCodeChanging(string value);
    partial void OnShippingRestrictionCodeChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    #endregion
		
		public ShippingRestrictedCity()
		{
			this._ShippingRestriction = new EntitySet<ShippingRestriction>(new Action<ShippingRestriction>(this.attach_ShippingRestriction), new Action<ShippingRestriction>(this.detach_ShippingRestriction));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingRestrictionCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShippingRestrictionCode
		{
			get
			{
				return this._ShippingRestrictionCode;
			}
			set
			{
				if ((this._ShippingRestrictionCode != value))
				{
					this.OnShippingRestrictionCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingRestrictionCode = value;
					this.SendPropertyChanged("ShippingRestrictionCode");
					this.OnShippingRestrictionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingRestrictedCity_ShippingRestriction", Storage="_ShippingRestriction", ThisKey="ShippingRestrictionCode", OtherKey="Code")]
		public EntitySet<ShippingRestriction> ShippingRestriction
		{
			get
			{
				return this._ShippingRestriction;
			}
			set
			{
				this._ShippingRestriction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShippingRestriction(ShippingRestriction entity)
		{
			this.SendPropertyChanging();
			entity.ShippingRestrictedCity = this;
		}
		
		private void detach_ShippingRestriction(ShippingRestriction entity)
		{
			this.SendPropertyChanging();
			entity.ShippingRestrictedCity = null;
		}
	}
}
#pragma warning restore 1591
